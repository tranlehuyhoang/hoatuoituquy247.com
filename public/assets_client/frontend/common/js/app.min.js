function numberFormat(t, e, a, n) {
    t = (t + "").replace(/[^0-9]/g, "");
    var i = isFinite(+t) ? +t : 0,
        o = isFinite(+e) ? Math.abs(e) : 0,
        r = void 0 === n ? "." : n,
        s = void 0 === a ? "," : a,
        d = "";
    return d = (o ? function(t, e) { var a = Math.pow(10, e); return "" + Math.round(t * a) / a }(i, o) : "" + Math.round(i)).split(","), d[0].length > 3 && (d[0] = d[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, r)), (d[1] || "").length < o && (d[1] = d[1] || "", d[1] += new Array(o - d[1].length + 1).join("0")), d.join(s)
}

function validateEmail(t) { return /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(t) }

function validatePhone(t) { return /((09|03|07|08|05)+([0-9]{8})\b)/g.test(t) }

function updateQueryStringParameter(t, e, a) { var n = new RegExp("([?&])" + e + "=.*?(&|#|$)", "i"); if (void 0 === a) return t.match(n) ? t.replace(n, "$1$2") : t; if (t.match(n)) return t.replace(n, "$1" + e + "=" + a + "$2"); var i = ""; - 1 !== t.indexOf("#") && (i = t.replace(/.*#/, "#"), t = t.replace(/#.*/, "")); var o = -1 !== t.indexOf("?") ? "&" : "?"; return t + o + e + "=" + a + i }

function getQueryString() { const t = getAllUrlParams(window.location.href); return void 0 === t.variant && "" !== global_selected_variant && (t.variant = global_selected_variant), t }

function getAllUrlParams(t) {
    var e = t ? t.split("?")[1] : window.location.search.slice(1),
        a = {};
    if (e)
        for (var n = (e = e.split("#")[0]).split("&"), i = 0; i < n.length; i++) {
            var o = n[i].split("="),
                r = o[0],
                s = void 0 === o[1] || o[1];
            if (r = r.toLowerCase(), "string" == typeof s && (s = s.toLowerCase()), r.match(/\[(\d+)?\]$/)) {
                var d = r.replace(/\[(\d+)?\]/, "");
                if (a[d] || (a[d] = []), r.match(/\[\d+\]$/)) {
                    var c = /\[(\d+)\]/.exec(r)[1];
                    a[d][c] = s
                } else a[d].push(s)
            } else a[r] ? a[r] && "string" == typeof a[r] ? (a[r] = [a[r]], a[r].push(s)) : a[r].push(s) : a[r] = s
        }
    return a
}

function debounce(t, e) {
    var a = null;
    return function() {
        var n = this,
            i = arguments;
        clearTimeout(a), a = setTimeout((function() { t.apply(n, i) }), e)
    }
}

function setCookie(t, e, a) {
    const n = new Date;
    n.setTime(n.getTime() + 24 * a * 60 * 60 * 1e3);
    let i = "expires=" + n.toUTCString();
    document.cookie = t + "=" + e + ";" + i + ";path=/"
}

function getCookie(t) {
    let e = t + "=",
        a = document.cookie.split(";");
    for (let t = 0; t < a.length; t++) {
        let n = a[t];
        for (;
            " " == n.charAt(0);) n = n.substring(1);
        if (0 == n.indexOf(e)) return n.substring(e.length, n.length)
    }
    return ""
}! function() {
    "use strict";
    var t = document.querySelectorAll(".needs-validation");
    Array.prototype.slice.call(t).forEach((function(t) { t.addEventListener("submit", (function(e) { t.checkValidity() || (e.preventDefault(), e.stopPropagation()), t.classList.add("was-validated") }), !1) }))
}(), $(window).on("load", (function() {
        const t = $(".cur-sort"),
            e = $(".sort-option"),
            a = window.location.href;
        e.length > 0 && e.each((function() {
            let e = $(this).attr("href"),
                n = $(this).text();
            e === a && t.text(n)
        }))
    })), $(document).ready((function() {
                var t = $(".full-container").outerHeight(),
                    e = $(window).height();
                $(window).scroll((function() {
                    const a = $(this).scrollTop();
                    a > 0 && t > e ? $(".header").addClass("fixed") : $(".header").removeClass("fixed"), a > 300 ? $("#scrollTop").addClass("show") : $("#scrollTop").removeClass("show");
                    const n = $(".product-detail__actions");
                    n.length > 0 && a > n.offset().top + n.innerHeight() ? $("#action_btn_sticky").hasClass("hide") && ($("#action_btn_sticky").removeClass("hide"), $("#action_btn_sticky").addClass("show")) : ($("#action_btn_sticky").removeClass("show"), $("#action_btn_sticky").addClass("hide"))
                })), $("#scrollTop").on("click", (function(t) { t.preventDefault(), $("html, body").animate({ scrollTop: 0 }, "swing") })), $(".menu__main .menu-item.has-child").append('<button type="button" class="btn-sub"><i class="fas fa-caret-down"></i></button>'), $(document).on("click", ".btn-sub", (function(t) { t.preventDefault(), $(this).siblings(".mega-menu").slideToggle(400).parent().toggleClass("active"), $(this).closest(".cate-item") && $(this).toggleClass("active").siblings("ul.sub-cate").slideToggle(400).parent() })), $(".btn-menu-mobi").on("click", (function(t) { t.preventDefault(), $("body").addClass("active-menu-mobi") })), $(".close-menu-mobi, .overlay-menu-mobi").on("click", (function(t) { t.preventDefault(), $("body").removeClass("active-menu-mobi"), $("body").removeClass("active-menu-user-mobi") })), $(".btn-user-menu").on("click", (function(t) { t.preventDefault(), $("body").addClass("active-menu-user-mobi") })), $(".slider__main").slick({ slidesToShow: 1, dots: !1, infinite: !1, autoplay: !0, autoplaySpeed: 5e3, speed: 1e3 }), $(".slider-prod").slick({ slidesToShow: 5, dots: !1, infinite: !1, responsive: [{ breakpoint: 992, settings: { slidesToShow: 3 } }, { breakpoint: 576, settings: { slidesToShow: 2 } }] });
                var a = $(".news-slider__main").attr("data-slidesToShow");
                null == a && (a = 4), $(".news-slider__main").slick({ rows: 1, slidesToShow: a, dots: !1, arrows: !1, infinite: !0, autoplay: !1, responsive: [{ breakpoint: 992, settings: { rows: 1, slidesToShow: 3 } }, { breakpoint: 576, settings: { rows: 2, slidesToShow: 1 } }] }), $(".brands__slider").slick({ rows: 1, slidesToShow: 6, dots: !1, arrows: !1, infinite: !1, responsive: [{ breakpoint: 992, settings: { rows: 1, slidesToShow: 5 } }, { breakpoint: 576, settings: { rows: 2, slidesToShow: 2 } }] });
                var n = $(".product-detail__thumbs").find('[data-attribute-thumb-active="1"]').index();
                n <= -1 && (n = 0), $(".product-detail__images").slick({ initialSlide: n, dots: !1, infinite: !1, asNavFor: ".product-detail__thumbs" }), $(".product-detail__thumbs").slick({ initialSlide: n, slidesToShow: 8, slidesToScroll: 1, dots: !1, arrows: !1, infinite: !1, lazyload: "ondemand", asNavFor: ".product-detail__images", centerMode: !1, focusOnSelect: !0, responsive: [{ breakpoint: 992, settings: { slidesToShow: 6 } }, { breakpoint: 576, settings: { slidesToShow: 5 } }] }), $(".product-detail__thumbs .slick-slide").removeClass("slick-active"), $(".product-detail__thumbs .slick-slide").eq(0).addClass("slick-active"), $(".product-detail__images").on("beforeChange", (function(t, e, a, n) {
                    var i = n;
                    $(".product-detail__thumbs .slick-slide").removeClass("slick-active"), $(".product-detail__thumbs .slick-slide").eq(i).addClass("slick-active")
                }));
                let i = !1;

                function o(t, e) { $.ajax({ type: "POST", url: url_cart_update_quantity, data: { product_variant_id: t, quantity: e }, dataType: "json", success: function(t) { l(), $.each(t.items, (function(t, e) { $('[data-cart-item-id="' + e.id + '"]').find(".subtotal").text(numberFormat(e.subtotal) + "đ") })) } }) }

                function r() {
                    var t = getQueryString(),
                        e = 0,
                        a = 0,
                        n = null;
                    if (void 0 !== t.variant) {
                        var i = $("#product-list-variant-hidden").find('input[data-attribute_value_id_str="' + t.variant + '"]');
                        e = i.attr("data-product_variant_price"), a = i.attr("data-product_variant_price_market");
                        var o = null != (n = i.attr("data-blocks_variant")) ? n.split("|") : [];
                        void 0 !== t.blocks && $.each(o, (function(a, n) {
                            var i = n.split(",");
                            parseInt(i[0]) === parseInt(t.blocks) && (e = i[1])
                        })), $(".price").find("del").text(numberFormat(parseFloat(a)) + " đ");
                        var r = (a - e) / a * 100;
                        $(".price").find(".discount").text("-" + Math.ceil(r) + "% Giảm")
                    } else if (void 0 !== t.blocks) {
                        var s = $("#product-list-blocks").find('[data-blocks-action="change-blocks"]');
                        $.each(s, (function(a, n) {
                            var i = $(n);
                            if (parseInt(i.attr("data-blocks-id")) === parseInt(t.blocks)) {
                                var o = i.attr("data-blocks-price").split(",");
                                e = o[1]
                            }
                        }))
                    }
                    var d = numberFormat(parseFloat(e)) + " đ";
                    $('[data-attribute="product_price"]').text(d)
                }
                var s;

                function d(t, e) {
                    $.ajax({
                        type: "POST",
                        url: url_location_districts,
                        data: { province_code: t },
                        dataType: "json",
                        success: function(t) {
                            var a = t.data,
                                n = '<option value="">Quận/Huyện</option>';
                            $.each(a, (function(t, e) { n += '<option value="' + e.district_code + '">' + e.district + "</option>" })), $("#district").html(n), "function" == typeof e && e()
                        }
                    })
                }

                function c() { return $("#product-list-blocks").find('[data-blocks-action="change-blocks"].checked') }
                $(".slick-slider").on("click", ".slick-prev, .slick-next", (function() { i = !0 })), $(".slick-slider").on("afterChange", (function(t, e) {
                        if (i) {
                            i = !1;
                            let t = $(this).slick("slickGetOption", "slidesToShow");
                            0 == e.currentSlide ? $(this).slick("slickGoTo", e.slideCount - 1) : e.slideCount - e.currentSlide <= t && $(this).slick("slickGoTo", 0)
                        }
                    })), $(".countdown").length && $(".countdown").each((function() {
                        var t = $(this).data("exp");
                        ! function(t, e) {
                            var a = t,
                                n = a.find(".days"),
                                i = a.find(".hours"),
                                o = a.find(".minutes"),
                                r = a.find(".seconds");

                            function s() {
                                var t = function(t) {
                                    var e = Date.parse(t) - Date.parse(new Date),
                                        a = Math.floor(e / 1e3 % 60),
                                        n = Math.floor(e / 1e3 / 60 % 60),
                                        i = Math.floor(e / 36e5 % 24),
                                        o = Math.floor(e / 864e5);
                                    return { total: e, days: o, hours: i, minutes: n, seconds: a }
                                }(e);
                                n.html(t.days), i.html(("0" + t.hours).slice(-2)), o.html(("0" + t.minutes).slice(-2)), r.html(("0" + t.seconds).slice(-2)), t.total <= 0 && clearInterval(d)
                            }
                            s();
                            var d = setInterval(s, 1e3)
                        }($(this), t)
                    })), $(".sidebar__cate .cate-item.has-child").append('<button type="button" class="btn-sub"><i class="fa-solid fa-angle-down"></i></button>'), $(document).on("click", (function(t) { t.target.closest(".cur-sort") ? (t.preventDefault(), $(".sort-list").toggleClass("active")) : $(".sort-list").removeClass("active") })), $(".sort-option").on("click", (function() {
                        var t = $(this).text();
                        $(".cur-sort").text(t)
                    })), $("#img_review").on("change", (function(t) {
                        t.preventDefault();
                        var e = t.target.files[0],
                            a = $(this).siblings(".img-preview").find("img"),
                            n = new FileReader;
                        n.onload = function() { $(a).attr("src", n.result) }, e ? (n.readAsDataURL(e), $(this).siblings("label").text("Thay đổi"), $(this).closest(".image-addReview").addClass("preview")) : ($(this).closest(".image-addReview").removeClass("preview"), $(this).siblings("label").text("Chọn ảnh"))
                    })), $(".remove-img").on("click", (function(t) { t.preventDefault(), $("#img_review").val("").trigger("change") })), $(".action--like").on("click", (function(t) { t.preventDefault(), $(this).toggleClass("liked") })), $(".btn-filter").on("click", (function(t) { $(".sidebar__block").slideToggle(300) })), $("body").on("keyup", "input[data-attribute-input-quantity]", (function(t) {
                        let e = $(this).val();
                        const a = $("#flash_sale_quantity_remaining");
                        if (a.length > 0) { const t = parseInt(a.text()); if (t <= e) return Swal.fire("", "Số lượng hiện tại quá số lượng khuyến mại!", "warning"), void $(this).val(t) }
                        e <= 0 && (Swal.fire("", "Số lượng tối thiểu là 1", "warning"), $(this).val(1), e = 1);
                        const n = $(this).attr("data-cart-product-variant-id");
                        null != n && o(n, e)
                    })), $("body").on("change", "input[data-attribute-input-quantity]", (function(t) {
                        var e = $(this).val();
                        e >= 1 ? $(this).parent().find("input[data-attribute-input-quantity]").val(e) : (Swal.fire("", "Số lượng tối thiểu là 1", "warning"), $(this).parent().find("input[data-attribute-input-quantity]").val(1))
                    })), $(".btn--minus").on("click", (function(t) {
                        t.preventDefault();
                        let e = $(this).siblings("input").val();
                        if (e > 1) {
                            --e, $(this).siblings("input").val(e), $(this).parent().find("input[data-attribute-input-quantity]").val(e);
                            const t = $(this).attr("data-cart-product-variant-id");
                            null != t && o(t, e)
                        } else Swal.fire("", "Số lượng tối thiểu là 1", "warning")
                    })), $(".btn--plus").on("click", (function(t) {
                        t.preventDefault();
                        let e = $(this).siblings("input").val();
                        const a = $("#flash_sale_quantity_remaining");
                        if (a.length > 0) { if (parseInt(a.text()) <= e) return void Swal.fire("", "Số lượng hiện tại quá số lượng khuyến mại!", "warning") }
                        if (e < 99) {
                            ++e, $(this).siblings("input").val(e), $(this).parent().find("input[data-attribute-input-quantity]").val(e);
                            const t = $(this).attr("data-cart-product-variant-id");
                            null != t && o(t, e)
                        } else Swal.fire("", "Đã đạt giới hạn đặt hàng cho sản phẩm này!", "warning")
                    })), $(".shipInfo-btn").on("click", (function(t) { t.preventDefault(), $(".shipInfo-detail").slideToggle(150) })), $(".popupBtnAddCart").on("click", (function(t) {
                        t.preventDefault();
                        var e = "fast-order-modal" == $(this).attr("data-attribute"),
                            a = "fast-advise-modal" == $(this).attr("data-attribute"),
                            n = "fast-advise-form" == $(this).attr("data-attribute"),
                            i = $('#product-list-variant-hidden input[data-attribute="product-info"]'),
                            o = i.attr("data-attribute-product-id"),
                            r = i.attr("data-attribute-product-type"),
                            s = $("input[data-attribute-input-quantity]").val(),
                            d = getQueryString().variant;
                        if (null == d && (d = 0), 0 == d && "variant" == r) { Swal.fire("Chọn loại sản phẩm", "Vui lòng chọn loại sản phẩm cần mua.", "warning"); const t = $('[data-attribute-list="prod-variation-main"]'); return void(t.length > 0 && $("html, body").animate({ scrollTop: t.offset().top - 80 }, 200)) }
                        let u = 0;
                        "simple" !== r && "variant" !== r || !c() || (u = function() {
                            const t = getQueryString();
                            let e = 0,
                                a = null;
                            void 0 !== t.variant && (a = $("#product-list-variant-hidden").find('[data-attribute_value_id_str="' + t.variant + '"]'));
                            if (void 0 !== t.blocks)
                                if (null !== a) {
                                    const n = a.attr("data-blocks_variant").split("|");
                                    $.each(n, (function(a, n) {
                                        const i = n.split(",");
                                        parseInt(i[0]) === parseInt(t.blocks) && (e = i[2])
                                    }))
                                } else {
                                    const t = c();
                                    e = t.attr("data-blocks-variant-id")
                                }
                            return e
                        }());
                        var p = e || a || n ? 1 : 0;
                        if (p) {
                            if (e) var m = $('[data-attribute="fast-order-modal-form"]');
                            else if (a) m = $('[data-attribute="advise-order-modal-form"]');
                            else if (n) m = $('[data-attribute="advise-order-form"]');
                            var f = m.find('input[name="order_cus_name"]').val(),
                                h = m.find('input[name="order_cus_phone"]').val(),
                                v = m.find('input[name="order_cus_address"]').val(),
                                _ = m.find('input[name="enterprise"]').is(":checked");
                            if ("" === f) return alert("Vui lòng nhập họ tên"), $('input[name="order_cus_name"]').focus(), !1;
                            if ("" === h) return alert("Bạn chưa điền số điện thoại!"), $('input[name="order_cus_phone"]').focus(), !1;
                            if (!1 === /((09|03|07|08|05)+([0-9]{8})\b)/g.test(h)) return alert("Số điện thoại của bạn không đúng định dạng!"), $('input[name="order_cus_phone"]').focus(), !1;
                            if ("" === v) return alert("Vui lòng nhập địa chỉ"), $('input[name="order_cus_address"]').focus(), !1
                        }
                        $.ajax({
                            type: "POST",
                            url: url_cart_store,
                            data: { product_id: o, product_type: r, quantity: s, variant: d, is_fast: p, variant_blocks_id: u },
                            dataType: "json",
                            beforeSend: () => { $(this).addClass("adding") },
                            done: () => { $(this).removeClass("adding") },
                            success: t => {
                                let e = parseInt(productIdMkt);
                                if (isNaN(e) && (e = 0), 1 === enable_tracking_fb && "undefined" != typeof fbq && e > 0) {
                                    const t = $('[data-attribute="product_price"]');
                                    let e = t.length > 0 ? $(t[0]).text() : 0;
                                    e = e.replace("đ", "").replace(/\./g, "").replace(/^\s+|\s+$/gm, "");
                                    const a = { id: productIdMkt, quantity: "" + s, item_price: "" + e };
                                    fbq("track", "AddToCart", { content_ids: [productIdMkt], content_type: "product", currency: "VND", contents: [a] })
                                }
                                if (p) {
                                    var a = { order_cus_name: f, order_cus_phone: h, order_cus_address: v, order_enterprise: _ ? 1 : 0, is_fast: 1 };
                                    $.ajax({ type: "POST", url: url_order_store, data: a, dataType: "json", beforeSend: () => { $(this).addClass("adding") }, success: t => { t.status ? ($("#modalFlashOrder").modal("hide"), $("#modalSupport").modal("hide"), window.location.href = t.href, $(this).removeClass("adding")) : Swal.fire("Lỗi", t.error, "error") } })
                                } else {
                                    l(), $(this).removeClass("adding").addClass("added");
                                    const t = $(this).attr("data-redirect");
                                    if (void 0 !== t && "#" !== t) window.location.href = t;
                                    else if (void 0 !== t && "#" === t) {
                                        const t = $('[data-attribute="product_name"]');
                                        let e = null;
                                        t.length > 0 && (e = t.text());
                                        const a = $('meta[property="og:image"]');
                                        let n = null;
                                        a.length > 0 && (n = a.attr("content"));
                                        const i = $("#show-product-after-cart");
                                        i.length > 0 && null !== e && null !== n && (i.find(".title").text(e), i.find(".img-fluid").attr("src", n), $("#show-product-after-cart").modal("show"))
                                    }
                                }
                            }
                        }), $(".btn-viewCart").show(0)
                    })), $("#cart-to-order-form").submit((function(t) {
                        if (t.preventDefault(), t.stopPropagation(), $(this)[0].checkValidity()) {
                            var e = $('[data-attribute-form="cart-to-order-form"]'),
                                a = { order_cus_name: e.find('input[name="order_cus_name"]').val(), order_cus_phone: e.find('input[name="order_cus_phone"]').val(), order_cus_email: e.find('input[name="order_cus_email"]').val(), order_cus_address: e.find('textarea[name="order_cus_address"]').val(), order_cus_provice_id: e.find("#province option:selected").val(), order_cus_district_id: e.find("#district option:selected").val(), order_cus_ward_id: e.find("#ward option:selected").val(), order_enterprise: e.find('input[name="enterprise"]').is(":checked") ? 1 : 0 };
                            $.ajax({ type: "POST", url: url_order_store, data: a, dataType: "json", success: function(t) { t.status ? (l(), window.location.href = t.href) : Swal.fire("Lỗi", t.error, "error") } })
                        }
                    })), $("body").on("click", '[data-blocks-action="change-blocks"]', (function() {
                        var t = $(this),
                            e = $('[data-blocks-list="prod-variation-blocks"]');
                        $.each(e, (function(e, a) { $(a).find('[data-blocks-action="change-blocks"]').removeClass("checked"), $(a).find('[data-blocks-id="' + t.attr("data-blocks-id") + '"]').addClass("checked") }));
                        var a = updateQueryStringParameter(document.location.href, "blocks", t.attr("data-blocks-id"));
                        window.history.pushState("page2", null, a), r()
                    })), $("body").on("click", '[data-attribute-action="change-variant"]', (function() {
                        var t = $(this).attr("data-attribute-attribute-value-id"),
                            e = $(this).attr("data-attribute-attribute");
                        $('[data-attribute-attribute="' + e + '"]').removeClass("checked"), $('[data-attribute-attribute-value-id="' + t + '"]').addClass("checked");
                        var a = 1 == $(this).attr("data-attribute-attribute-is-color"),
                            n = 1 == $(this).attr("data-attribute-attribute-is-type");
                        a && $(".product-detail__thumbs .slick-slide").each((function(e, a) { $(a).attr("data-attribute-thumb-color") == t && $(".product-detail__thumbs").slick("slickGoTo", e) })), n && $(".product-detail__thumbs .slick-slide").each((function(e, a) { $(a).attr("data-attribute-thumb-type") == t && $(".product-detail__thumbs").slick("slickGoTo", e) }));
                        var i, o = $('[data-attribute-list="prod-variation-main"]').find('[data-attribute-action="change-variant"]'),
                            s = [];
                        $.each(o, (function(t, e) {
                            if ($(e).hasClass("checked")) {
                                var a = $(e).attr("data-attribute-attribute-value-id");
                                s.push(a)
                            }
                        })), s.sort((function(t, e) { return t - e })), i = "-" + s.join("-");
                        var d = $("#product-list-variant-hidden").find('input[data-attribute_value_id_str="' + i + '"]');
                        if (d.length > 0) {
                            d.attr("data-product_variant_price"), d.attr("data-product_variant_price_market");
                            "out_stock" == d.attr("data-product_variant_stock") ? ($(".prod-quantity").find(".meta-title, .quantity").addClass("d-none"), $(".prod-quantity").find(".stock").removeClass("stock--on").addClass("stock--off").text("Tạm hết hàng"), $("#addToCart, #flashOrder, #support, .popupBtnAddCart, .popupBtnOrder").prop("disabled", !0)) : ($(".prod-quantity").find(".meta-title, .quantity").removeClass("d-none"), $(".prod-quantity").find(".stock").addClass("stock--on").removeClass("stock--off").text("Còn hàng"), $("#addToCart, #flashOrder, #support, .popupBtnAddCart, .popupBtnOrder").prop("disabled", !1));
                            var c = updateQueryStringParameter(document.location.href, "variant", i);
                            window.history.pushState("page2", null, c), r(), $('[data-attribute="product_sku"]').text(d.attr("data-product_variant_sku"));
                            const t = d.attr("data-product_variant_name");
                            let e = d.attr("data-product_product_name");
                            if (void 0 !== e && "" !== e) {
                                void 0 !== t && "" !== t && (e += ", " + t);
                                const a = $('[data-attribute="product_name"]');
                                a.length > 0 && a.text(e)
                            }
                        }
                    })), $("body").on("click", ".btn-removeProd", (function(t) {
                        var e = $(this),
                            a = e.attr("data-cart-item-id");
                        Swal.fire({ title: "Bạn có muốn xóa?", text: "Nếu cần mua lại, vui lòng chọn lại sản phẩm!", icon: "warning", showCancelButton: !0, confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Xóa sản phẩm" }).then((t => { t.isConfirmed && $.ajax({ type: "POST", url: url_cart_remove, data: { cart_item_id: a }, dataType: "json", success: function(t) { e.parents(".cart-product").remove(), l() } }) }))
                    })), $("body").on("#name_review", "keypress", (function(t) { t.preventDefault(), console.log(t.key) })), $(".btn-addReview").on("click", (function(t) {
                                t.preventDefault();
                                const e = $(this);
                                let a = $("#new_comment").val(),
                                    n = $("#name_review").val();
                                const i = $("#phone_review"),
                                    o = $("#phone_email");
                                let r = i.length < 1 ? "a" : i.val(),
                                    s = o.length < 1 ? "example@gmail.com" : o.val(),
                                    d = $(".img-preview > img").attr("src"),
                                    c = $('input[name="star_num"]:checked').val(),
                                    l = c / 5 * 100,
                                    u = parseInt($(".cmtCount").text()) + 1;
                                if ("" == a) $("#new_comment").after('<small class="form-text text-danger">Vui lòng nhập đánh giá của bạn</small>');
                                else if ("" == n) $("#name_review").after('<small class="form-text text-danger">Vui lòng nhập tên của bạn</small>');
                                else if ("" == r) $("#phone_review").after('<small class="form-text text-danger">Vui lòng nhập số điện thoại của bạn</small>');
                                else if (1 != validateEmail(s)) $("#email_review").after('<small class="form-text text-danger">Vui lòng nhập email của bạn</small>');
                                else {
                                    var p = new FormData;
                                    p.append("product_id", productId), p.append("comment_content", a), p.append("comment_name", n), p.append("comment_star", c), p.append("image", $("#img_review")[0].files[0]), p.append("ref", "website"), $.ajax({
                                                url: url_comment_store,
                                                data: p,
                                                processData: !1,
                                                contentType: !1,
                                                type: "POST",
                                                beforeSend: function() {
                                                    e.addClass("adding")
                                                },
                                                success: function(t) {
                                                        $(".cmtCount").text(u), $(".comments-list").prepend(`<div class="comment">\n                    <span class="comment__user">${n}</span>\n                    <div class="comment__rating rating">\n                        <div class="rating-star">\n                            \x3c!-- Tính % rating (rating/5) đẩy vào width của rating-fill --\x3e\n                            <div class="rating-fill"\n                                    style="width: ${l}%;"><span>★★★★★</span></div>\n                            <div class="rating-empty"><span>★★★★★</span></div>\n                        </div>\n                    </div>\n                    ${d ? `<div class="comment__image">\n                        <img src="${d}"\n                            alt="ảnh bình luận">\n                    </div>` : ""}\n                    <p class="comment_content">${a}</p>\n                </div>`), $(".product-detail__addReview")[0].reset(), $("#img_review").val("").trigger("change"), $(".img-preview > img").attr("src", "");
                    let i = $(".product-detail__comments").offset().top - 60;
                    $("html, body").animate({
                        scrollTop: i
                    }, "swing"), e.removeClass("adding"), document.querySelector(".product-detail__addReview").reset(), alert("Bình luận đã được gửi thành công!, cảm ơn những chia sẻ của bạn")
                }
            })
        }
    })), $("#new_comment, #name_review, #phone_review, #email_review").on("input", (function () {
        $(this).siblings(".form-text").length > 0 && "" != $(this).val() && $(this).siblings(".form-text").remove()
    })), $("body").on("click", ".action--rep", (function (t) {
        t.preventDefault(), $(".comments-list").find(".form-reply").html("");
        var e = $(this).attr("data-comment-id"),
            a = $(this).parents(".comment"),
            n = $("#form-comment-reply-temp").html();
        a.find(".form-reply").html(n), a.find("form").attr("data-comment-id", e)
    })), $("body").on("click", ".reset-form-comment-reply", (function (t) {
        t.preventDefault(), $(".comments-list").find(".form-reply").html("")
    })), 
   s = $("#province option:selected").val(), parseInt(s) > 0 && d(s, (function () { })), $("body").on("change", "#province", (function (t) {
        var e = $("#province option:selected").val();
        d(e, (function () {
            $.ajax({
                type: "POST",
                url: url_cart_update_province,
                data: {
                    province_code: e
                },
                dataType: "json",
                success: function (t) {
                    l()
                }
            })
        }))
    })), $("body").on("change", "#district", (function (t) {
        ! function (t, e) {
            $.ajax({
                type: "POST",
                url: url_location_wards,
                data: {
                    district_code: t
                },
                dataType: "json",
                success: function (t) {
                    const a = t.data;
                    let n = '<option value="">Xã/Phường</option>';
                    $.each(a, (function (t, e) {
                        n += '<option value="' + e.ward_code + '">' + e.ward + "</option>"
                    })), $("#ward").html(n), "function" == typeof e && e()
                }
            })
        }($("#district option:selected").val(), (function () { }))
    })), $("body").on("click", 'div[data-event="change-payment-method"]', (function (t) {
        const e = $(this).attr("data-value");
        $(".payment-method").find(".method-cod__checked").addClass("d-none"), $(this).find(".method-cod__checked").removeClass("d-none"), "bank" === e ? $(".payment-method-bank-info").removeClass("d-none") : $(".payment-method-bank-info").addClass("d-none"), $.ajax({
            type: "POST",
            url: url_cart_update_payment_method,
            data: {
                payment_method: e
            },
            dataType: "json",
            success: function (t) { }
        })
    })), $("body").on("change", 'input[name="price_range"]', (function (t) {
        var e = $(this).val(),
            a = updateQueryStringParameter(document.location.href, "filter_price", e);
        window.location.href = a
    })), $("body").on("change", 'input[name="rating"]', (function (t) {
        var e = $(this).val(),
            a = updateQueryStringParameter(document.location.href, "filter_rate", e);
        window.location.href = a
    })), $("body").on("change", 'input[name="cate_feature"]', (function (t) {
        var e = $(this).val(),
            a = updateQueryStringParameter(document.location.href, "filter_cate_feature", e);
        a = updateQueryStringParameter(a, "page", 1), window.location.href = a
    })), $("body").on("change", 'input[name="cate_brand"]', (function (t) {
        var e = $(this).val(),
            a = updateQueryStringParameter(document.location.href, "filter_cate_brand", e);
        a = updateQueryStringParameter(a, "page", 1), window.location.href = a
    })), $("body").on("keyup", "#keyword", debounce((function (t) {
        var e = $("#keyword").val();
        e ? $.ajax({
            type: "POST",
            url: url_product_autocomplete_search,
            data: {
                kw: e
            },
            dataType: "json",
            beforeSend: function () {
                $(".form-main").addClass("searching")
            },
            success: function (t) {
                $('[data-attribute="result-autocomplete-search"]').html(t.html), $(".ajax-result").removeClass("d-none").addClass("d-flex"), $(".form-main").removeClass("searching")
            }
        }) : ($('[data-attribute="result-autocomplete-search"]').html(""), $(".ajax-result").removeClass("d-flex").addClass("d-none"), $(".form-main").removeClass("searching"))
    }), 250)), $(document).on("click", (function (t) {
        t.target.closest(".header__search") || $(".ajax-result").removeClass("d-flex").addClass("d-none")
    }));

    function l() {
        $.ajax({
            type: "GET",
            url: url_cart_count,
            data: {},
            dataType: "json",
            success: function (t) {
                const e = $('[data-attribute="cart-count"]');
                e.find(".cart-count-mobi");
                t.count > 0 ? (e.find(".cart-empty").addClass("d-none"), e.find(".cart-ready").removeClass("d-none")) : (e.find(".cart-empty").removeClass("d-none"), e.find(".cart-ready").addClass("d-none")), $('[data-attribute="cart-count-number"]').text(t.count);
                let a = numberFormat(t.shipping) + "đ";
                0 == t.shipping && (a = "Miễn phí");
                const n = $("#el-total-fee-shipping");
                t.shipping > 0 && n.hasClass("d-none") && n.removeClass("d-none"), $('[data-cart-subtotal="total-subtotal"]').text(numberFormat(t.sub_total) + "đ"), $('[data-cart-fee-shipping="total-fee-shipping"]').text(a), $('[data-cart-total="total-bill"]').text(numberFormat(t.total) + "đ"), $('[ data-cart-intend-time="intend-time"]').text(t.intend_time), "" !== t.intend_note ? $('[ data-cart-intend-time="intend-note"]').removeClass("d-none").text(t.intend_note) : $('[ data-cart-intend-time="intend-note"]').addClass("d-none")
            }
        })
    }
    l(), $("body").on("click", "#scroll-to-comment-list", (function () {
        $("html, body").animate({
            scrollTop: $("#comments-list").offset().top - 100
        }, 300)
    })), $("body").on("click", "#scroll-to-rated", (function () {
        var t = $("#rated-star");
        t && $("html, body").animate({
            scrollTop: t.offset().top - 100
        }, 300)
    })), $("body").on("click", ".contact-fast-send", (function () {
        const t = $("#contact-fast-phone");
        if ("" == t.val() || !1 === /((09|03|07|08|05)+([0-9]{8})\b)/g.test(t.val())) return alert("Số điện thoại của bạn không đúng định dạng!"), t.focus(), !1;
        $.ajax({
            type: "POST",
            url: url_order_contact,
            data: {
                product_id: productId || 0,
                order_cus_phone: t.val()
            },
            dataType: "json",
            beforeSend: () => {
                $(this).addClass("adding")
            },
            done: () => {
                $(this).removeClass("adding")
            },
            success: t => {
                t.status ? window.location.href = t.href : alert(t.message)
            }
        })
    })), $("body").on("click", ".contact-form-send", (function () {
        const t = $("#contact-form-name"),
            e = $("#contact-form-phone");
        if ("" == t.val()) return alert("Vui lòng nhập họ tên của bạn!"), t.focus(), !1;
        if ("" == e.val() || !1 === /((09|03|07|08|05)+([0-9]{8})\b)/g.test(e.val())) return alert("Số điện thoại của bạn không đúng định dạng!"), e.focus(), !1;
        $.ajax({
            type: "POST",
            url: url_order_contact,
            data: {
                product_id: productId || $(this).attr("data-product-default"),
                order_cus_phone: e.val(),
                order_cus_name: t.val(),
                order_cus_note: $("#contact-form-note").val()
            },
            dataType: "json",
            beforeSend: () => {
                $(this).addClass("adding")
            },
            done: () => {
                $(this).removeClass("adding")
            },
            success: t => {
                t.status ? window.location.href = t.href : alert(t.message)
            }
        })
    })), $("body").on("click", "#comment-load-more", (function (t) {
        t.preventDefault(), $.ajax({
            type: "GET",
            url: url_comment_list,
            data: {
                product_id: productId || $(this).attr("data-product"),
                page: parseInt($(this).attr("data-page"))
            },
            dataType: "json",
            beforeSend: () => {
                $(this).addClass("adding")
            },
            done: () => {
                $(this).removeClass("adding")
            },
            success: t => {
                if (t.status) {
                    var e = $(t.htm).hide();
                    $(".comments-list").append(e), e.fadeIn(300), t.next_page ? $(this).attr("data-page", t.next_page) : $(this).addClass("d-none")
                }
            }
        })
    })), $("body").on("click", ".event-hotline,.event-zalo", (function (t) {
        const e = $(this).attr("data-contact-sale-id");
        if (null == e) return;
        const a = "contact_sale_id_" + e;
        "" === getCookie(a) && (setCookie(a, e, .5), $.ajax({
            type: "POST",
            url: url_contact_sale,
            data: {
                contact_sale_id: e,
                referer: window.location.href
            },
            dataType: "json",
            success: function (t) { }
        }))
    })), $("body").on("click", ".footer__title", (function (t) {
        t.preventDefault();
        const e = $(this),
            a = $(this).attr("data-expand-for"),
            n = $("#" + a);
        null != a && null != n && n.slideToggle({
            duration: 150,
            start: function () {
                $(this).is(":visible")
            },
            complete: function () {
                $(this).is(":visible") ? e.addClass("active") : e.removeClass("active")
            }
        })
    })), $("body").on("click", "#expand-toc", (function (t) {
        t.preventDefault();
        const e = $("#toc-content");
        e.length > 0 && e.toggle(125)
    }))
}));